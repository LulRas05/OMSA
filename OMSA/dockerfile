FROM python:3.12-slim

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    ACCEPT_EULA=Y \
    MSSQL_CLI_TELEMETRY_OPTOUT=1 \
    DJANGO_SETTINGS_MODULE=core.settings

# SO + unixODBC
RUN apt-get update && apt-get install -y \
    curl ca-certificates gnupg2 apt-transport-https \
    build-essential \
    unixodbc unixodbc-dev \
    && rm -rf /var/lib/apt/lists/*

# Repos MS + ODBC Driver 18
RUN curl -sSLo /tmp/packages-microsoft-prod.deb https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb \
    && dpkg -i /tmp/packages-microsoft-prod.deb \
    && rm /tmp/packages-microsoft-prod.deb \
    && apt-get update \
    && ACCEPT_EULA=Y apt-get install -y msodbcsql18 odbcinst \
    && rm -rf /var/lib/apt/lists/*

# App
WORKDIR /app

COPY requirements.txt .
RUN python -m pip install --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

COPY . .

# collectstatic SIN depender de manage.py
RUN python -m django collectstatic --noinput

# Opcional: darle aire a gunicorn
ENV GUNICORN_CMD_ARGS="--workers=2 --threads=2 --timeout=120"

# Render inyecta $PORT. migrate SIN depender de manage.py y arrancar gunicorn.
CMD ["sh", "-c", "python -m django migrate --noinput && gunicorn core.wsgi:application --bind 0.0.0.0:${PORT} --log-file -"]
